rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authorized
    function isAuthorized() {
      return request.auth != null &&
        exists(/databases/$(database)/documents/authorized_users/$(request.auth.token.email)) &&
        get(/databases/$(database)/documents/authorized_users/$(request.auth.token.email)).data.approved == true;
    }
    
    // Authorized users collection
    match /authorized_users/{email} {
      // Users can read their own status, or all if they're authorized (for admin panel)
      allow read: if request.auth != null && (
        request.auth.token.email == email || 
        isAuthorized()
      );
      // Authorized users can write (for admin panel)
      allow write: if isAuthorized();
    }
    
    // Items collection - example protected collection
    match /items/{itemId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && isAuthorized();
    }
    
    // Default deny all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
